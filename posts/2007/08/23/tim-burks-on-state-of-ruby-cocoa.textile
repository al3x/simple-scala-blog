h1. Tim Burks on the State of Ruby + Cocoa

Not content to let a rhetorical question end my exploration into the state of Ruby and Cocoa, I went in search of expert guidance.  Tim Burks was kind enough to answer a barrage of questions from me about Ruby and Cocoa "over on his blog":http://blog.neontology.com/posts/2007/08/23/rubycocoa-and-rubyobjc-q-and-a.  His answers are informative and cover a lot of ground.

When faced with two competing ways of solving a problem, programmers are often forced to make unpleasant choices.  It's clear from Tim's answers that while RubyObjC is the more elegant of the two Ruby-to-Cocoa bridges out there, RubyCocoa has Apple's weight behind it and may end up being the default solution for pure Ruby Cocoa development.

It'll be interesting to see what's available on Leopard for Ruby programmers, doubtless.