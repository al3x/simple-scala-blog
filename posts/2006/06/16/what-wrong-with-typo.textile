h1. What's Wrong With Typo
(A commenter on my Typo export script asked what’s wrong with Typo.  I started to reply with another comment but it grew into this.)
What’s wrong with "Typo":http://www.typosphere.org/?  Lots of stuff.
Typo started out on the right foot: a lithe Rails blog engine with no web-based administration; all posting, editing, and deleting of articles was done via %(=caps)XML%-RPC, presumably via a desktop blog editing app like "MarsEdit":http://ranchero.com/marsedit/.  This kept the code base small and the user base smaller, which meant that the only features getting added were must-haves for serious bloggers, not something-for-everyone niceties.
When Rails started to take off, fans got a bad case of “everything on the same platform” syndrome.  Even though there are stellar, battle-tested blogging packages that are far easier to deploy and maintain, every Rails newbie under the sun decided that their first project was going to be setting up a Typo blog and chronicling their adventures in Ruby-land.  With this influx of users came the desire for a snazzy administration interface and about a billion other features.  Typo got bloated in a big way.
The main problem with Typo, though, is that it’s a Rails app, and Rails apps require more hand-holding than your middle school girlfriend.  Memory leaks, lingering sessions, caching issues, zombie processes, and all sorts of badness are (or were) de rigeur in the Rails world.  That’s fine when you’re developing and administering a production application because it’s usually your full-time job to look after it.  But you shouldn’t have to be a full-time admin for your blogging software.  Blogging software should install-and-forget, case closed.
No wonder, then, that one person eager for my export script said, “Typo’s been blowing goats.”  Strong words, friends.  Strong words.
