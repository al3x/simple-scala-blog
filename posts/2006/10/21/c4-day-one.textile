h1. C4 Day One

If you're interested in what's transpiring at "C4":http://rentzsch.com/c4/zero you've probably already seen "TUAW's coverage":tuaw.com/2006/10/21/c4-commenceth-day-one/.  I'll try not to repeat what they said.

John "Wolf" Rentzsch's enthusiastic introduction included a bit of reverse engineering.  We in the audience were regaled with the history of "Bombapp.app," a relic of the OS X 10.0 days designed to demonstrate the operating system's stability.  As it turns out, Bombapp.app does little more than play a QuickTime movie and write to a bad memory address; hardly an exhaustive test suite.  In the process of figuring out what makes Bombapp.app tick, Wolf discovered that its embedded QuickTime movie is malformed, and causes modern OS X apps that can play QuickTime movies to crash.  Laughs all around, if you're a giant nerdasaurous.  Fortunately, everyone here is.

"John Gruber":http://www.daringfireball.net gave an excellent talk on the changing nature of GUI design on the Mac.  Every hand in the room shot up when he asked who thought Apple had a UI consistency problem, but by the end he had heads nodding in agreement that you can have software that is diverse in appearance but (internally) consistent.  Not an easy sell for this crowd, as I'm sure many share my nostalgia for the idea of consistent UI that encourages holistic learning of an operating system and its conventions.  What could be more important than such consistency?

To answer that question, Gruber co-opted the concept of "auteur theory":http://en.wikipedia.org/wiki/Auteur_theory from film, positing that programmers are the aesthetic authors of their applications.  As such, they put their particular spin on every application they create; it's all about looking around the ever-expanding universe of GUI design options and asking, "what would look good in my app?"  This means that competitive developers need an evolved sense of design, usability, and aesthetics.

Gruber believes that an "implicit HIG" is emerging, a set of (often seasonal) trends and visual practices that good-looking, successful applications follow.  Until recently this has meant copying Apple's latest and greatest styles, but this might be a losing battle.  As Gruber put it: "Steve likes the idea that Apple software looks better than your software."  This necessitates breaking from norms and trends where appropriate and making "software that looks different out of the corner of your eye" to stand out on a user's crowded desktop.

The theme of independent developers competing with Apple has been oft-repeated, and the conference isn't over yet.  I'll have raw collaborative notes from day two available later, to be followed by a more digested post.