h1. Easy Virtual Modular Synthesis Environments? You’re Screwed

You may remember that a while back I blogged on the “sorry state of laptop DJing.”  Well, now Stanton (maker of the "FinalScratch":http://www.finalscratch.com MP3-to-vinyl system) is talking about an early spring release for an OS X version that uses Native Instrument’s "Traktor DJ Studio 2":http://www.traktor-dj.com as its software interface.  If you know how much I adore Traktor, you can imagine that I’m pretty pleased by this decision.  It puts a great software interface on your laptop for shuffling tracks about and lets you use your existing turntables and oh-so-tactile vinyl to manipulate the music. All discussion of the need for DJing to move beyond the turntable aside, this adds up to a pretty badass laptop DJing setup that runs on creative-friendly Mac OS X.

Now, if only there was such an option for synthesis.  I’m not just talking about your average VSTi/DXi softsynths, which are plentiful and mediocre.  I speak of virtual modular synthesis environments, of which "Max/MSP":http://www.cycling74.com is the archetype.  Essentially, Max and its derivatives are graphical programming languages that combine the hideous complexity of analog modular synthesizers with all the usability of high-level programming, wrapped up in a butt-ugly interface.  Despite these setbacks, musicians have done quite a bit with Max/MSP over the years.  But while Max was taken over as a commercial program, its musician/academic/ubergeek author Miller Puckette was busy creating the next generation Max-style software.  Puckette’s Puredata (or “Pd”) opens the source and fixes a bunch of Max’s linguistic shortcomings.  Similarly, Puckette’s former place of academic residence, IRCAM, offers up the Java-based "jMax":http://www.ircam.fr/equipes/temps-reel/jmax/en/about.html, which is apparently even more linguistically elegant than Pd, but used even less.  Less use means less resources to solve problems and bounce around patches and ideas, and that lack of community makes jMax’s usability hurdles hardly worth overcoming.

The downside of Pd not being commercially supported is its painfully minimalist interface.  Don’t get me wrong: there is a fair bit of documentation that ships with Pd, and plenty of help screens for the built-in functions.  But the Pd experience, like any Max derivative, is simply not __intuitive__, or no more so than programming is for the average musician.  Even this geek has trouble just “jumping into” Pd, and that gap between development and output can mean death for creative work.  And indeed, much of the "material":http://wav.post-pop.org/wav04/trx.html "out":http://www.junklight.com/january02/madeoutofmusic/madeoutofmusic.html "there":http://www.swiezinski.de/swy/doc/topics/music.html composed/generated with Pd is cold, clipped, academic, and repeat-unlistenable (and I listen to noise).  It’s a pity, really, and one I’ve been talking to "Adam Lindsay":http://homepage.mac.com/atl/pd/ about over e-mail, who sensibly defends the potential of Pd while recognizing its difficulties.

So what, for the OS X user, is out there in the way of __usable__ virtual modular synthesis?  Cycling74’s tiny programming team is still dragging their feet on an OS X version of Max.  So, while it’s "arguably":http://www.nativeinstruments.de/forum/showthread.php?s=ece9837afc0688443e0699be330de770&amp;threadid=2757 less flexible, being less programming language than limitless virtual audio hardware workbench, Native Instrument’s "Reaktor 4":http://www.nativeinstruments.de/index.php?id=reaktor4_us, due out in April for OS X, seems to be the best option.  I’ve used Reaktor before, and it’s still hard to use, just not Max/Pd hard: at the end of a couple hours of tweaking, your Reaktor project may not make the sounds you want, but at least it makes sound.  And, as with all of NI’s programs, Reaktor’s interface is cool and usable, truly geared at musicians.  The downside, of course, is that Reaktor costs, though decidedly less for students and academics.

So why my interest in really flexible synthesis packages, particularly when my music software of choice is Ableton Live, a looping tool?  Well, you’ve got to have something to loop, something with sonic texture.  Beats are a dime a dozen: grab old samples, rework other people’s stuff, cough into a mic and make beats out of that.  But interesting, textured sounds really come from two means: live recording and complex synthesis.  Live recording really isn’t an option for me, as carrying portable recording devices like Minidiscs are expensive, slow, analog, and require the same right-time/right-place factor as good photography.  Being on a college campus most of the time, my sound sources are pretty mundane.  So that leaves synthesis, the more complex the better.  My conclusion is basically this: I’m gonna try my best with Pd for now, because it’s free and works on OS X now, but I’m gonna gripe about its interface a lot.  Come April, I’ll give Reaktor 4 a try, and probably sing its praises, like most people do for most Native Instruments software, because NI does amazing stuff.  But I won’t be able to afford it.  So, dag.