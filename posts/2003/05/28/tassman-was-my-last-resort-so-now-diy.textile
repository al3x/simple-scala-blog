h1. Tassman Was My Last Resort. So Now DIY VST?

I go back and forth on making music/sound, and when waffling I usually (foolishly) look to gear for inspiration.  Part of what made my set last night work, at least for me, was that it was technically straightforward compared to other approaches I’ve taken.  I essentially manipulated several drones pre-recorded in the Reaktor software synthesis environment (when I still owned a copy several months ago) and mixed in samples of spy transmissions run through some pretty simple filters and plugins.  All this was inside Ableton Live 2, of course, and oh that all audio software could be so elegant and conducive to productivity.

What does all this have to do with Applied Acoustics’ "Tassman":http://www.applied-acoustics.com/tassman.htm physical modeling synthesis software?  Well, after giving up Reaktor for financial necessity, technical concerns, and frustration with maker Native Instruments’ era-long development cycles, I had gone through all but one of the available freeform sound design software packages.  Have been "thoroughly bewildered":http://www.al3x.net/mt/archives/000016.html by Max/MSP and its ilk and now exhausted Reaktor, only Tassman was left to test, and only today did I note the availability of a demo.  It took mere minutes to realize that, while a fine package for emulating instruments via physical modeling synthesis, Tassman is not inherently suited to the sort of sample manipulation I’m interested i, nor does its interface, an almost tactile emulation of old synthesizer knobs and dials, really appeal to me.  So that settles it; graphical sound design workbench software just isn’t for me, at least not right now.

Part of the problem is that I adore Live too much to leave it, and few other audio applications integrate elegantly with it, save the dancefloor-oriented "Reason":http://www.propellerheads.se/products/reason/ “virtual rack” software.  The politics of competing audio software interoperability standards notwithstanding, little is available to Live other than %(=caps)VST% effects plugins.  To that end, I’m considering learning to write my own VSTfx; since my goal is sample manipulation and Live provides the ideal sample playback environment, some unusual and creative %(=caps)VST% programming would get me as close to the sort of audio manipulation I want to be doing as any process I’ve yet explored, and all inside my favorite software.  The question, then, is: how hard is writing VSTfx for Mac %(=caps)OS X%, and where do I start?  I have a few leads of my own, but any suggestions would be much appreciated.